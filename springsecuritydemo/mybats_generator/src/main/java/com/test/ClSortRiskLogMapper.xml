<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yyh.mapper.ClSortRiskLogMapper">
  <resultMap id="BaseResultMap" type="com.yyh.domain.ClSortRiskLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="borrow_id" jdbcType="BIGINT" property="borrowId" />
    <result column="req_params" jdbcType="LONGTEXT" property="reqParams" />
    <result column="response" jdbcType="LONGTEXT" property="response" />
    <result column="score" jdbcType="VARCHAR" property="score" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, borrow_id, req_params, response, score, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cl_sort_risk_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cl_sort_risk_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yyh.domain.ClSortRiskLog">
    insert into cl_sort_risk_log (id, user_id, borrow_id, 
      req_params, response, score, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{borrowId,jdbcType=BIGINT}, 
      #{reqParams,jdbcType=LONGTEXT}, #{response,jdbcType=LONGTEXT}, #{score,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yyh.domain.ClSortRiskLog">
    insert into cl_sort_risk_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="borrowId != null">
        borrow_id,
      </if>
      <if test="reqParams != null">
        req_params,
      </if>
      <if test="response != null">
        response,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="borrowId != null">
        #{borrowId,jdbcType=BIGINT},
      </if>
      <if test="reqParams != null">
        #{reqParams,jdbcType=LONGTEXT},
      </if>
      <if test="response != null">
        #{response,jdbcType=LONGTEXT},
      </if>
      <if test="score != null">
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yyh.domain.ClSortRiskLog">
    update cl_sort_risk_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="borrowId != null">
        borrow_id = #{borrowId,jdbcType=BIGINT},
      </if>
      <if test="reqParams != null">
        req_params = #{reqParams,jdbcType=LONGTEXT},
      </if>
      <if test="response != null">
        response = #{response,jdbcType=LONGTEXT},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yyh.domain.ClSortRiskLog">
    update cl_sort_risk_log
    set user_id = #{userId,jdbcType=BIGINT},
      borrow_id = #{borrowId,jdbcType=BIGINT},
      req_params = #{reqParams,jdbcType=LONGTEXT},
      response = #{response,jdbcType=LONGTEXT},
      score = #{score,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>